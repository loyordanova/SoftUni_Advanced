rows, cols = list(map(int, input().split(',')))

matrix, mouse_start_pos, cheese_count = [], None, 0
for row in range(rows):
    matrix.append(list(input()))
    if 'M' in matrix[row]:
        mouse_start_pos = [row, matrix[row].index('M')]
    elif 'C' in matrix[row]:
        cheese_count += matrix[row].count('C')

directions = {'left': (0, -1), 'right': (0, 1), 'up': (-1, 0), 'down': (1, 0)}


def boundaries(row, col):
    return 0 <= row < rows and 0 <= col < cols


while True:
    command = input()
    if command == 'danger':
        print("Mouse will come back later!")
        break
    new_row, new_col = mouse_start_pos[0] + directions[command][0], mouse_start_pos[1] + directions[command][1]
    if not boundaries(new_row, new_col):
        new_row = mouse_start_pos[0]
        new_col = mouse_start_pos[1]
        print("No more cheese for tonight!")
        break
    if matrix[new_row][new_col] == '@':
        continue

    elif matrix[new_row][new_col] == 'C':
        matrix[new_row][new_col] = 'M'
        matrix[mouse_start_pos[0]][mouse_start_pos[1]] = '*'
        mouse_start_pos[0] = new_row
        mouse_start_pos[1] = new_col
        cheese_count -= 1
        if cheese_count == 0:
            print("Happy mouse! All the cheese is eaten, good night!")
            break

    elif matrix[new_row][new_col] == 'T':
        matrix[mouse_start_pos[0]][mouse_start_pos[1]] = '*'
        matrix[new_row][new_col] = 'M'
        print("Mouse is trapped!")
        break
    else:
        matrix[new_row][new_col] = 'M'
        matrix[mouse_start_pos[0]][mouse_start_pos[1]] = '*'
        mouse_start_pos[0] = new_row
        mouse_start_pos[1] = new_col
for row in matrix:
    print(''.join(row))
