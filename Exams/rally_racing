n = int(input())
racing_num = input()

matrix, current_car_pos, tunnel_positions = [], [0, 0], []

for row in range(n):
    matrix.append(input().split())
    if 'T' in matrix[row]:
        tunnel_positions.append([row, matrix[row].index('T')])


directions = {'left': (0, -1), 'right': (0, 1), 'up': (-1, 0), 'down': (1, 0)}

covered_km = 0

while True:
    command = input()
    if command == 'End':
        matrix[current_car_pos[0]][current_car_pos[1]] = 'C'
        print(f'Racing car {racing_num} DNF.')
        break
    current_car_pos[0], current_car_pos[1] = current_car_pos[0] + directions[command][0], current_car_pos[1] + directions[command][1]
    if matrix[current_car_pos[0]][current_car_pos[1]] == 'F':
        covered_km += 10
        matrix[current_car_pos[0]][current_car_pos[1]] = 'C'
        print(f'Racing car {racing_num} finished the stage!')
        break
    elif matrix[current_car_pos[0]][current_car_pos[1]] == 'T':
        matrix[current_car_pos[0]][current_car_pos[1]] = '.'
        tunnel_positions.remove([current_car_pos[0], current_car_pos[1]])
        current_car_pos[0] = tunnel_positions[0][0]
        current_car_pos[1] = tunnel_positions[0][1]
        covered_km += 30
        matrix[current_car_pos[0]][current_car_pos[1]] = '.'
    else:
        covered_km += 10


print(f"Distance covered {covered_km} km." )
for row in matrix:
    print(''.join(row))
