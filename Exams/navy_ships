n = int(input())
matrix, submarine_start_pos = [], None
for row in range(n):
    matrix.append(list(input()))
    if 'S' in matrix[row]:
        submarine_start_pos = [row, matrix[row].index('S')]

directions = {'left': (0, -1), 'right': (0, 1), 'up': (-1, 0), 'down': (1, 0)}
damage = 3
cruisers_left = 3

while True:
    command = input()

    new_row = submarine_start_pos[0] + directions[command][0]
    new_col = submarine_start_pos[1] + directions[command][1]
    if matrix[new_row][new_col] == '-':
        matrix[submarine_start_pos[0]][submarine_start_pos[1]] = '-'
        submarine_start_pos[0], submarine_start_pos[1] = new_row, new_col
        matrix[new_row][new_col] = 'S'
        continue
    elif matrix[new_row][new_col] == 'C':
        cruisers_left -= 1
        matrix[submarine_start_pos[0]][submarine_start_pos[1]] = '-'
        submarine_start_pos[0], submarine_start_pos[1] = new_row, new_col
        matrix[new_row][new_col] = 'S'
    elif matrix[new_row][new_col] == '*':
        damage -= 1
        matrix[submarine_start_pos[0]][submarine_start_pos[1]] = '-'
        submarine_start_pos[0], submarine_start_pos[1] = new_row, new_col
        matrix[new_row][new_col] = 'S'
    if damage == 0:
        matrix[submarine_start_pos[0]][submarine_start_pos[1]] = 'S'
        print(f'Mission failed, U-9 disappeared! Last known coordinates [{submarine_start_pos[0]}, {submarine_start_pos[1]}]!')
        break
    if cruisers_left == 0:
        print("Mission accomplished, U-9 has destroyed all battle cruisers of the enemy!")
        break

for row in matrix:
    print(''.join(row))
